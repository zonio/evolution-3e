add component.activated shell event

From: Ondrej Jirman <ondrej.jirman@zonio.net>

calendar/ChangeLog:

2008-04-02  Ondrej Jirman  <megous@megous.com>

	** Fix for bug #525238

	* e-shell-window.c: (switch_view):
	* es-event.c:
	* es-event.h:
	Add new "component.activated" event. Event is emmitted whenever
	component is activated. ESEventTargetComponent contains a name
	of the component being activated.
---

 shell/e-shell-window.c |   10 ++++++++++
 shell/es-event.c       |   11 +++++++++++
 shell/es-event.h       |   11 ++++++++++-
 3 files changed, 31 insertions(+), 1 deletions(-)


diff --git a/shell/e-shell-window.c b/shell/e-shell-window.c
index 788aaf2..e2c9878 100644
--- a/shell/e-shell-window.c
+++ b/shell/e-shell-window.c
@@ -36,6 +36,7 @@
 #include "e-shell-marshal.h"
 #include "e-sidebar.h"
 #include "es-menu.h"
+#include "es-event.h"
 
 #include <gtk/gtkbutton.h>
 #include <gtk/gtkhbox.h>
@@ -356,6 +357,15 @@ switch_view (EShellWindow *window, ComponentView *component_view)
 
 	g_object_unref (gconf_client);
 
+	/** @Event: Shell component activated or switched to.
+	 * @Id: component.activated
+	 * @Target: ESEventTargetComponent
+	 * 
+	 * This event is emitted whenever the shell successfully activates component
+	 * view.
+	 */
+	e_event_emit((EEvent *) es_event_peek (), "component.activated", (EEventTarget *) es_event_target_new_component (es_event_peek (), component_view->component_id));
+
 	g_signal_emit (window, signals[COMPONENT_CHANGED], 0);
 }
 
diff --git a/shell/es-event.c b/shell/es-event.c
index 5d4c536..14934cf 100644
--- a/shell/es-event.c
+++ b/shell/es-event.c
@@ -152,6 +152,16 @@ es_event_target_new_upgrade(ESEvent *eme, int major, int minor, int revision)
 	return t;
 }
 
+ESEventTargetComponent *
+es_event_target_new_component(ESEvent *eme, const char* name)
+{
+	ESEventTargetComponent *t = e_event_target_new(&eme->event, ES_EVENT_TARGET_COMPONENT, sizeof(*t));
+
+	t->name = name;
+
+	return t;
+}
+
 /* ********************************************************************** */
 
 static void *emeh_parent_class;
@@ -167,6 +177,7 @@ static const EEventHookTargetMap emeh_targets[] = {
 	{ "state", ES_EVENT_TARGET_STATE, emeh_state_masks },
 	{ "upgrade", ES_EVENT_TARGET_UPGRADE, NULL },
 	{ "shell", ES_EVENT_TARGET_SHELL, NULL },
+	{ "component", ES_EVENT_TARGET_COMPONENT, NULL },
 	{ NULL }
 };
 
diff --git a/shell/es-event.h b/shell/es-event.h
index 518fd44..4f26395 100644
--- a/shell/es-event.h
+++ b/shell/es-event.h
@@ -41,7 +41,8 @@ typedef struct _ESEventClass ESEventClass;
 enum _es_event_target_t {
 	ES_EVENT_TARGET_STATE,
 	ES_EVENT_TARGET_UPGRADE,
-	ES_EVENT_TARGET_SHELL
+	ES_EVENT_TARGET_SHELL,
+	ES_EVENT_TARGET_COMPONENT
 };
 
 /* Flags that qualify TARGET_STATE */
@@ -53,6 +54,7 @@ enum {
 typedef struct _ESEventTargetState ESEventTargetState;
 typedef struct _ESEventTargetUpgrade ESEventTargetUpgrade;
 typedef struct _ESEventTargetShell ESEventTargetShell;
+typedef struct _ESEventTargetComponent ESEventTargetComponent;
 
 struct _ESEventTargetShell {
 	EEventTarget target;
@@ -74,6 +76,12 @@ struct _ESEventTargetUpgrade {
 	int revision;
 };
 
+struct _ESEventTargetComponent {
+	EEventTarget target;
+
+	char* name;
+};
+
 typedef struct _EEventItem ESEventItem;
 
 /* The object */
@@ -94,6 +102,7 @@ ESEvent *es_event_peek(void);
 ESEventTargetState *es_event_target_new_state(ESEvent *emp, int state);
 ESEventTargetShell *es_event_target_new_shell(ESEvent *eme, struct _EShell *shell);
 ESEventTargetUpgrade *es_event_target_new_upgrade(ESEvent *emp, int major, int minor, int revision);
+ESEventTargetComponent *es_event_target_new_component(ESEvent *eme, const char* name);
 
 /* ********************************************************************** */
 
