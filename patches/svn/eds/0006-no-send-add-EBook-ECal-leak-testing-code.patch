From c5b22f97dbc38999441c45790b46196e56ac245e Mon Sep 17 00:00:00 2001
From: Ondrej Jirman <ondrej.jirman@zonio.net>
Date: Wed, 24 Oct 2007 20:45:23 +0200
Subject: [PATCH] no-send: add EBook/ECal leak testing code

---
 addressbook/libebook/e-book-view.c |    2 ++
 addressbook/libebook/e-book.c      |    6 ++++++
 calendar/libecal/e-cal-view.c      |    2 ++
 calendar/libecal/e-cal.c           |    6 ++++++
 4 files changed, 16 insertions(+), 0 deletions(-)

diff --git a/addressbook/libebook/e-book-view.c b/addressbook/libebook/e-book-view.c
index 229ba6f..f61d016 100644
--- a/addressbook/libebook/e-book-view.c
+++ b/addressbook/libebook/e-book-view.c
@@ -269,6 +269,8 @@ e_book_view_dispose (GObject *object)
 	EBookView             *book_view = E_BOOK_VIEW (object);
 	CORBA_Environment  ev;
 
+  g_print("XXXXXXXXXXXXXXX: free book view %p\n", object);
+
 	if (book_view->priv) {
 		if (book_view->priv->book) {
 			g_object_unref (book_view->priv->book);
diff --git a/addressbook/libebook/e-book.c b/addressbook/libebook/e-book.c
index 46d06fd..80e1722 100644
--- a/addressbook/libebook/e-book.c
+++ b/addressbook/libebook/e-book.c
@@ -1870,6 +1870,9 @@ do_get_book_view (gboolean sync,
 	query_string = e_book_query_to_string (query);
 
 	our_op->cb.book_view = cb;
+
+  g_print("XXXXXXXXXXXXXXX: new book view %p %p\n", book, cb);
+
 	our_op->closure = closure;
 
 	/* will eventually end up calling e_book_response_get_book_view */
@@ -3991,6 +3994,7 @@ e_book_init (EBook *book)
 	book->priv->mutex         = g_mutex_new ();
 	book->priv->id_to_op      = g_hash_table_new (g_int_hash, g_int_equal);
 	book->priv->current_op_id = 1;
+  g_print("XXXXXXXXXXXXXXX: new book %p\n", book);
 }
 
 static void
@@ -3998,6 +4002,8 @@ e_book_dispose (GObject *object)
 {
 	EBook             *book = E_BOOK (object);
 
+  g_print("XXXXXXXXXXXXXXX: free book %p\n", book);
+
 	if (book->priv) {
 		if (book->priv->comp_listener) {
 			g_signal_handler_disconnect (book->priv->comp_listener, book->priv->died_signal);
diff --git a/calendar/libecal/e-cal-view.c b/calendar/libecal/e-cal-view.c
index 77c5799..4795bf4 100644
--- a/calendar/libecal/e-cal-view.c
+++ b/calendar/libecal/e-cal-view.c
@@ -216,6 +216,8 @@ e_cal_view_finalize (GObject *object)
 	g_return_if_fail (object != NULL);
 	g_return_if_fail (E_IS_CAL_VIEW (object));
 
+  g_print("XXXXXXXXXXXXXXX: free cal view %p\n", object);
+
 	view = E_CAL_VIEW (object);
 	priv = view->priv;
 
diff --git a/calendar/libecal/e-cal.c b/calendar/libecal/e-cal.c
index 1184339..2d3d935 100644
--- a/calendar/libecal/e-cal.c
+++ b/calendar/libecal/e-cal.c
@@ -1046,6 +1046,8 @@ e_cal_init (ECal *ecal, ECalClass *klass)
 {
 	ECalPrivate *priv;
 
+  g_print("XXXXXXXXXXXXXXX: new cal %p\n", ecal);
+
 	priv = g_new0 (ECalPrivate, 1);
 	ecal->priv = priv;
 
@@ -1101,6 +1103,8 @@ e_cal_finalize (GObject *object)
 	g_return_if_fail (object != NULL);
 	g_return_if_fail (E_IS_CAL (object));
 
+  g_print("XXXXXXXXXXXXXXX: free cal %p\n", object);
+
 	ecal = E_CAL (object);
 	priv = ecal->priv;
 
@@ -4872,6 +4876,8 @@ e_cal_get_query (ECal *ecal, const char *sexp, ECalView **query, GError **error)
 	status = our_op->status;
 	*query = our_op->query;
 
+  g_print("XXXXXXXXXXXXXXX: new cal view %p %p\n", ecal, *query);
+
 	bonobo_object_unref (BONOBO_OBJECT (our_op->listener));
 	
 	e_calendar_remove_op (ecal, our_op);
-- 
1.5.3.4.320-dirty

