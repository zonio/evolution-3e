/* vim: set ft=c : */

namespace ES;

/* Error definitions. */
error NOT_AUTHORIZED = 1;
error AUTH_FAILED = 2;
error USER_EXISTS = 3;
error UNKNOWN_USER = 4;
error INVALID_PASSWORD = 5;
error NO_PERMISSION = 6;
error CALENDAR_EXISTS = 7;
error UNKNOWN_CALENDAR = 8;
error ALREADY_SUBSCRIBED = 9;
error NOT_SUBSCRIBED = 10;
error COMPONENT_EXISTS = 11;
error UNKNOWN_COMPONENT = 12;
error INTERNAL_SERVER_ERROR = 20;
error CLIENT_ERROR = 21;

struct Attribute
{
  string name;
  string value;
  boolean is_public;
}

struct Calendar
{
  string owner;
  string name;
  array<Attribute> attrs;
  string perm;
}

struct Permission
{
  string user;
  string perm;
}

struct User
{
  string username;
  array<Attribute> attrs;
}

struct Message
{
  int id;
  string sender;
  string date;
  string content;
}

servlet Client
{
  boolean auth(string username, string password);
  boolean changePassword(string new_password);
  array<Calendar> getCalendars();
  boolean setCalendarAttribute(string calspec, string name, string value, boolean is_public);
  boolean subscribeCalendar(string calspec);
  boolean unsubscribeCalendar(string calspec);
  array<Permission> getPermissions(string calname);
  boolean setPermission(string calname, string for_username, string perm);
  array<User> getUsers(string query);
  boolean setUserAttribute(string name, string value, boolean is_public);
  array<Attribute> getUserAttributes(string username);
  array<Calendar> getSharedCalendars(string query);
  boolean newCalendar(string calname);
  boolean deleteCalendar(string calname);
  boolean addObject(string calspec, string object);
  boolean updateObject(string calspec, string object);
  boolean deleteObject(string calspec, string uid);
  string queryObjects(string calspec, string query);
  array<Message> getMessages();
  boolean deleteMessage(int msgid);
  boolean sendMessage(array<string> recipients, string message);
  string freeBusy(string attendee, string from_date, string to_date);
}

servlet Admin
{
  boolean createUser(string username, string password);
}
